server:
  port: 9102
  tomcat:
    threads:
      max: 50                    # Reduced from default 200
      min-spare: 5              # Reduced from default 10
    max-connections: 8192       # Reduced from default 8192
    accept-count: 100           # Reduced from default 100
    connection-timeout: 20000   # 20 seconds

spring:
  application:
    name: chitchat-user-service
  main:
    allow-circular-references: false
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:postgresql://ec2-65-1-185-194.ap-south-1.compute.amazonaws.com:5432/chitchat
    username: summitcodeworks
    password: 8ivhaah8
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 2      # Further reduced for low-resource system
      minimum-idle: 1           # Minimal idle connections
      connection-timeout: 30000 # 30 seconds
      idle-timeout: 600000      # 10 minutes
      max-lifetime: 1800000     # 30 minutes
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false             # Disabled to reduce memory
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false       # Disabled to reduce memory
        jdbc:
          batch_size: 20        # Optimize batch processing
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 5           # Reduced from default 8
        max-idle: 2             # Reduced from default 8
        min-idle: 1             # Reduced from default 0
        max-wait: 2000ms
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      max-poll-records: 100     # Reduced from default 500
      session-timeout-ms: 30000
      heartbeat-interval-ms: 10000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 16384         # Optimize batch size
      linger-ms: 5
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=600s

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.chitchat.user: INFO      # Reduced from DEBUG
    org.springframework.web: WARN # Reduced from DEBUG
    org.hibernate.SQL: WARN      # Reduced SQL logging
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

jwt:
  secret: ${JWT_SECRET:3703ea2161827e52832c162790d1a511e2a7aa22120c34f6d620e703d876697b}
  expiration: ${JWT_EXPIRATION:3600}

twilio:
  account:
    sid: ${TWILIO_ACCOUNT_SID:}
  auth:
    token: ${TWILIO_AUTH_TOKEN:}
  phone:
    number: ${TWILIO_PHONE_NUMBER:}

firebase:
  project-id: ${FIREBASE_PROJECT_ID:chitchat-9c074}
