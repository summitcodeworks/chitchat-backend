server:
  port: 9102

spring:
  application:
    name: chitchat-user-service
  datasource:
    url: jdbc:postgresql://ec2-13-233-106-55.ap-south-1.compute.amazonaws.com:5432/chitchat
    username: summitcodeworks
    password: 8ivhaah8
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: http://localhost:9100/eureka/
  instance:
    prefer-ip-address: true

jwt:
  secret: chitchat-secret-key-for-jwt-token-generation-2024
  expiration: 86400000

firebase:
  project-id: chitchat-project
  credentials-path: classpath:firebase-credentials.json

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.chitchat.user: DEBUG
    org.springframework.web: DEBUG
