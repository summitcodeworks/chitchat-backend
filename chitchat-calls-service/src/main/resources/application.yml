server:
  port: 9105

spring:
  application:
    name: chitchat-calls-service
  cloud:
    compatibility-verifier:
      enabled: false
  datasource:
    url: jdbc:postgresql://ec2-65-1-185-194.ap-south-1.compute.amazonaws.com:5432/chitchat
    username: summitcodeworks
    password: 8ivhaah8
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 2      # Reduced for low-resource system
      minimum-idle: 1           # Minimal idle connections
      connection-timeout: 30000 # 30 seconds
      idle-timeout: 300000      # 5 minutes
      max-lifetime: 900000      # 15 minutes
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false             # Disabled to reduce memory and overhead
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false       # Disabled to reduce overhead
        jdbc:
          batch_size: 20        # Optimize batch processing
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: calls-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.chitchat.calls: DEBUG
    org.springframework.web: DEBUG
