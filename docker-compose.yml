version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:16
    container_name: chitchat-postgres
    environment:
      POSTGRES_DB: chitchat
      POSTGRES_USER: summitcodeworks
      POSTGRES_PASSWORD: 8ivhaah8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    networks:
      - chitchat-network

  mongodb:
    image: mongo:7
    container_name: chitchat-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: summitcodeworks
      MONGO_INITDB_ROOT_PASSWORD: 8ivhaah8
      MONGO_INITDB_DATABASE: chitchat
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js
    networks:
      - chitchat-network

  redis:
    image: redis:7-alpine
    container_name: chitchat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chitchat-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: chitchat-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - chitchat-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: chitchat-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - chitchat-network

  # ChitChat Services
  eureka-server:
    build:
      context: .
      dockerfile: chitchat-eureka-server/Dockerfile
    container_name: chitchat-eureka-server
    ports:
      - "8761:8761"
    networks:
      - chitchat-network

  api-gateway:
    build:
      context: .
      dockerfile: chitchat-api-gateway/Dockerfile
    container_name: chitchat-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - chitchat-network

  user-service:
    build:
      context: .
      dockerfile: chitchat-user-service/Dockerfile
    container_name: chitchat-user-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - postgres
      - redis
      - kafka
    networks:
      - chitchat-network

  messaging-service:
    build:
      context: .
      dockerfile: chitchat-messaging-service/Dockerfile
    container_name: chitchat-messaging-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - mongodb
      - redis
      - kafka
    networks:
      - chitchat-network

  media-service:
    build:
      context: .
      dockerfile: chitchat-media-service/Dockerfile
    container_name: chitchat-media-service
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - postgres
    networks:
      - chitchat-network

  calls-service:
    build:
      context: .
      dockerfile: chitchat-calls-service/Dockerfile
    container_name: chitchat-calls-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
      - postgres
      - redis
      - kafka
    networks:
      - chitchat-network

  notification-service:
    build:
      context: .
      dockerfile: chitchat-notification-service/Dockerfile
    container_name: chitchat-notification-service
    ports:
      - "8085:8085"
    depends_on:
      - eureka-server
      - postgres
      - kafka
    networks:
      - chitchat-network

  status-service:
    build:
      context: .
      dockerfile: chitchat-status-service/Dockerfile
    container_name: chitchat-status-service
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
      - mongodb
      - redis
      - kafka
    networks:
      - chitchat-network

  admin-service:
    build:
      context: .
      dockerfile: chitchat-admin-service/Dockerfile
    container_name: chitchat-admin-service
    ports:
      - "8087:8087"
    depends_on:
      - eureka-server
      - postgres
      - mongodb
      - kafka
    networks:
      - chitchat-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  chitchat-network:
    driver: bridge
